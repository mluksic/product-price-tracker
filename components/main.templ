package components

import "github.com/mluksic/product-price-tracker/types"
import "fmt"

templ Modal() {
    <div>
        <button hx-target="#dialog" hx-on:click="modal.showModal()" hx-trigger="click" class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
          Track new price
        </button>

        <dialog id="modal" class="modal fade">
            <div id="dialog" class="modal-dialog" hx-target="this">
              <!-- Modal header -->
              <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                  <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
                      Track new price
                  </h3>
                  <button hx-on:click="modal.close()" type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                      <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                      </svg>
                      <span class="sr-only">Close modal</span>
                  </button>
              </div>

              <!-- Modal body -->
              <form class="p-4 md:p-5" name="form-creation" hx-on::after-request="this.reset()">
                  <div class="grid gap-4 mb-4 grid-cols-2">
                      <div class="col-span-2">
                          <label for="name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Name</label>
                          <input type="email" name="name" id="name" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Type product name" required />
                      </div>
                      <div class="col-span-2">
                          <label for="url" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">URL</label>
                          <input type="url" name="url" id="url" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Type website URL" required />
                      </div>
                  </div>

                  <button hx-post="products" hx-target="#alert" hx-on::after-request="modal.close(); setTimeout(function () {document.getElementById('alert-inner').remove();}, 5000);" type="submit" class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                      @PlusSign()
                       Track
                  </button>
              </form>
            </div>
        </dialog>
    </div>
}

templ GreenSign() {
    <span class="flex justify-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
        </svg>
    </span>
}

templ RedSign() {
    <span class="flex justify-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
        </svg>
    </span>
}

templ PlusSign() {
    <svg class="me-1 -ms-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd"></path></svg>
}

templ ItemCreatedAlert(success bool, msg string) {
    if success {
        <div id="alert-inner" class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-lg">
            <p class="text-lg font-semibold">Success!</p>
            <p>{ msg }</p>
        </div>
    } else {
        <div id="alert-inner" class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-lg">
            <p class="text-lg font-semibold">Failed!</p>
            <p>Ohh no, something went wrong - { msg }</p>
        </div>
    }
}

templ ActionButtons(product types.Product) {
    <button hx-get={ fmt.Sprintf("products/%d", product.ID) } hx-target="#product-prices" hx-swap="innerHTML show:top" class="focus:ring-2 focus:ring-offset-2 focus:ring-red-300 text-sm leading-none text-gray-600 py-3 px-5 bg-gray-100 rounded hover:bg-gray-200 focus:outline-none">View</button>
    <button hx-post={ fmt.Sprintf("products/%d/scrape", product.ID) } class="focus:ring-2 focus:ring-offset-2 focus:ring-red-300 text-sm leading-none text-blue-600 py-3 px-5 bg-blue-100 rounded hover:bg-blue-200 focus:outline-none">Scrape</button>
    if product.IsTracked {
        <button hx-put={ fmt.Sprintf("products/%d/track", product.ID) } hx-target="#alert" hx-on::after-request="setTimeout(function () {document.getElementById('alert').remove();}, 5000);"class="focus:ring-2 focus:ring-offset-2 focus:ring-yellow-300 text-sm leading-none text-yellow-600 py-3 px-5 bg-yellow-100 rounded hover:bg-yellow-200 focus:outline-none">Un-track</button>
    } else {
        <button hx-put={ fmt.Sprintf("products/%d/track", product.ID) } hx-target="#alert"  hx-on::after-request="setTimeout(function () {document.getElementById('alert').remove();}, 5000);"class="focus:ring-2 focus:ring-offset-2 focus:ring-yellow-300 text-sm leading-none text-yellow-600 py-3 px-5 bg-yellow-100 rounded hover:bg-yellow-200 focus:outline-none">Track</button>
    }
    <button hx-delete={ fmt.Sprintf("products/%d", product.ID) } hx-confirm="Are you sure?" hx-target="closest tr" hx-swap="outerHTML swap:0.5s" class="focus:ring-2 focus:ring-offset-2 focus:ring-red-300 text-sm leading-none text-red-600 py-3 px-5 bg-red-100 rounded hover:bg-red-200 focus:outline-none">Delete</button>
}
